{"version":3,"sources":["routes/Home.js","routes/ToDo.js","routes/Chat.js","routes/Calendar.js","App.js","index.js"],"names":["Home","state","className","to","React","Component","Checkbox","styled","button","props","isDone","css","XButton","ToDoText","p","isImportant","ToDo","day","Date","newItem","list","totalNum","item","this","find","element","setState","key","value","id","Math","random","slice","push","updatedList","filter","getMonth","getDate","getDay","map","onClick","importantActive","style","marginLeft","marginRight","color","checkActive","console","log","deleteItem","addItem","type","placeholder","onChange","e","updateInput","target","ChatBody","body","ChatScreen","div","ChatTitle","ChatBottom","ChatInput","input","ChatContent","ChatMessage","ChatMessageContent","ChatMessageTime","ChatMessage2","Alert","date","time","num","messageList","Chat","useState","text","setText","onReset","fontSize","marginTop","display","flexDirection","justifyContent","getHours","getMinutes","onKeyPress","size","Calendar","currentMonth","selectedDate","onDateClick","nextMonth","addMonths","prevMonth","subMonths","format","days","startDate","startOfWeek","i","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","isSameMonth","isSameDay","parse","renderHeader","renderDays","renderCells","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7357268.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../css/Home.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n    }\r\n    render(){\r\n        return (\r\n            <div className = \"border\">\r\n                <div className=\"introduce\">\r\n                    <p1>Hello, It's first page!</p1>\r\n                </div>\r\n                <div className=\"linkList\">\r\n                    <div className = \"menu\">\r\n                        <Link to=\"/ToDo\">ToDo</Link>\r\n                    </div>\r\n                    <div className = \"menu\">\r\n                        <Link to=\"/Chat\">Chat</Link>\r\n                    </div>\r\n                    <div className = \"menu\">\r\n                        <Link to=\"/Calendar\">Calendar</Link>\r\n                    </div>\r\n                    <div className = \"menu\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"../css/ToDo/ToDo.css\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { AiOutlineCheck, AiFillStar, AiOutlineStar } from \"react-icons/ai\";\r\n\r\nconst Checkbox = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 25px;\r\n  border: 3px solid rgb(48, 79, 255);\r\n  background-color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  color: rgb(48, 79, 255);\r\n  align-items: center;\r\n  padding: 0;\r\n  justify-content: center;\r\n  ${props =>\r\n    props.isDone &&\r\n    css`\r\n      background-color: rgb(255, 159, 188);\r\n    `}\r\n`;\r\n\r\nconst XButton = styled.button`\r\n    border-radius: 25px;\r\n    border: none;\r\n    height: 30px;\r\n    font-size: large;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    width: 30px;\r\n    margin-left: 80px;\r\n    background-color: rgb(255, 75, 105);\r\n    ${props =>\r\n        props.isDone &&\r\n        css`\r\n          background-color: rgb(255, 75, 105, 0.2);\r\n    `}\r\n`;\r\n\r\nconst ToDoText = styled.p`\r\n    margin: 0;\r\n    padding: 0;\r\n    ${props =>\r\n    props.isImportant &&\r\n    css`\r\n        color: red;\r\n        font-weight: 900;\r\n    `}\r\n    ${props =>\r\n    props.isDone &&\r\n        css`\r\n          color: rgba(1,1,1,0.2);\r\n    `}\r\n    ${props =>\r\n    props.isImportant && props.isDone &&\r\n        css`\r\n            color: red;\r\n            opacity: 0.2;\r\n            font-weight: 900;\r\n    `}\r\n`;\r\n\r\nclass ToDo extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            day: new Date(),\r\n            newItem: \"\",\r\n            list: [],\r\n            totalNum : 0\r\n        };\r\n    };\r\n    checkActive(item){\r\n        const list = [...this.state.list];\r\n        const newItem = list.find(element => element===item);\r\n        if(newItem.isDone===true)\r\n            this.setState({totalNum : this.state.totalNum + 1});\r\n        else if(newItem.isDone===false)\r\n            this.setState({totalNum : this.state.totalNum - 1});\r\n\r\n        newItem.isDone = !newItem.isDone;\r\n        this.setState({\r\n            list\r\n        });\r\n    };\r\n    importantActive(item){\r\n        const list = [...this.state.list];\r\n        const newItem = list.find(element => element===item);\r\n        newItem.isImportant = !newItem.isImportant;\r\n        this.setState({\r\n            list\r\n        });\r\n    };\r\n    updateInput(key,value) {\r\n        this.setState({[key]:value });\r\n    };\r\n    addItem() {\r\n        const newItem = {\r\n          id: 1 + Math.random(),\r\n          value: this.state.newItem.slice(),\r\n          isDone: false,\r\n          isImportant: false\r\n        };\r\n    \r\n        const list = [...this.state.list];\r\n        list.push(newItem);\r\n    \r\n        this.setState({\r\n          list,\r\n          newItem:'',\r\n          totalNum: this.state.totalNum + 1\r\n        });\r\n    };\r\n    deleteItem(id) {\r\n        const list = [...this.state.list];\r\n        const updatedList = list.filter(item => item.id !== id);\r\n        this.setState({\r\n            list: updatedList,\r\n            totalNum: this.state.totalNum - 1\r\n        });\r\n    };\r\n    render(){\r\n        const date = ['일', '월', '화', '수', '목', '금', '토'];\r\n        return (\r\n            <div className=\"border\">\r\n                <div className=\"date\">\r\n                    <div>{this.state.day.getMonth()+1}월 {this.state.day.getDate()}일 {date[this.state.day.getDay()]}요일</div>\r\n                    <div></div>\r\n                    <div>🔷 오늘의 할 일 {this.state.totalNum}개 🔷</div>\r\n               </div>\r\n               <div className=\"todoList\">\r\n                   <ul>\r\n                        {this.state.list.map(item => {\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <div className=\"todo\">\r\n                                    <div className=\"important_check\">\r\n                                    {!item.isImportant && <AiOutlineStar onClick={ () => this.importantActive(item)} style={{marginLeft:10, marginRight: 7}} color=\"orange\" />}\r\n                                    {item.isImportant && <AiFillStar onClick={ () => this.importantActive(item)} style={{marginLeft:10, marginRight: 7}} color=\"orange\" />}\r\n                                    <Checkbox isDone={item.isDone} onClick={ () => this.checkActive(item)}>{console.log(\"isDone?\" + item.isDone)}{item.isDone && <AiOutlineCheck />}</Checkbox>\r\n                                    </div>\r\n                                    <ToDoText isDone={item.isDone} isImportant={item.isImportant}>{item.value}</ToDoText>\r\n                                    <XButton isDone={item.isDone} onClick={() => this.deleteItem(item.id)}>X</XButton>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                        })}\r\n                    </ul>\r\n               </div>\r\n               <div className=\"plusBox\">\r\n                   <form>\r\n                       <button className=\"plusBox_button\" onClick={() => this.addItem()}>+</button>\r\n                       <input className=\"plusBox_text\" type=\"text\" placeholder=\"할 일을 입력하세요. \"\r\n                       value={this.state.newItem}\r\n                       onChange={e => this.updateInput('newItem', e.target.value)}\r\n                       ></input>\r\n                   </form>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDo;","import React, { useState } from 'react';\r\nimport \"../css/Chat/Chat.css\";\r\nimport styled from \"styled-components\";\r\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\r\nimport { FaPaperPlane } from \"react-icons/fa\";\r\nimport 'react-chat-widget/lib/styles.css';\r\n\r\nconst ChatBody = styled.body`\r\n    width 100vw;\r\n    height: 100vh;\r\n    background: linear-gradient(to bottom, rgba(114, 170, 255), rgba(255, 61, 202, 0.8));\r\n    margin: -8px -8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ChatScreen = styled.div`\r\n    background-color: white;\r\n    border-radius: 25px;\r\n    margin: 50px 50px;\r\n    width: 50vw;\r\n    height: 70vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;    \r\n    box-shadow:  5px 5px 5px rgba(1, 1, 1, 0.5);\r\n`;\r\n\r\nconst ChatTitle = styled.div`\r\n    background-color: rgba(53, 203, 229, 0.7);\r\n    height: 15%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: x-large;\r\n    font-weight: 900;\r\n    border-top-left-radius: 25px;\r\n    border-top-right-radius: 25px;\r\n`;\r\n\r\nconst ChatBottom = styled.div`\r\n    height: 12%;\r\n    border-bottom-left-radius: 25px;\r\n    border-bottom-right-radius: 25px;    \r\n    background-color: rgba(244, 247, 249);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 30px;\r\n`;\r\n\r\n\r\nconst ChatInput = styled.input`\r\n    font-family: \"Cafe24SsurroundAir\";\r\n    font-size: 18px;\r\n    border: none;\r\n    background-color: rgba(244, 247, 249);\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst ChatContent = styled.div`\r\n    overflow: auto;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    font-family: \"Cafe24SsurroundAir\";\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n    margin: 0px 12px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ChatMessageContent = styled.div`\r\n    background-color: rgba(244, 247, 249);\r\n    padding: 15px 15px;\r\n    margin-left: 4px;\r\n    width: 22vw;\r\n    border-radius: 25px;\r\n`;\r\n\r\nconst ChatMessageTime = styled.div`\r\n    font-size: x-small;\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst ChatMessage2 = styled.div`\r\n    margin: 0px 12px;\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n`;\r\n\r\nconst Alert = styled.div`\r\n    width:22px;\r\n    height:22px;\r\n    background-color: red;\r\n    border-radius:25px;\r\n    color: white;\r\n    font-size:small;\r\n    text-align: center;\r\n    margin-left: 8px;\r\n`;\r\nconst date = new Date();\r\n\r\nfunction time (num) {\r\n    if (num < 10)\r\n        return (\r\n            '0' + num\r\n        );\r\n    else return num;\r\n}\r\n\r\nconst messageList = [];\r\nfunction Chat (){\r\n    const [text, setText] = useState('');\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    const onReset = () => {\r\n        setText('');\r\n        messageList.push(text);\r\n    } \r\n    return(\r\n        <ChatBody>\r\n            <ChatScreen>\r\n                <ChatTitle>\r\n                    <IoPersonCircleSharp style={{fontSize: 'xx-large', marginRight: 10, marginTop: 3}} />Someone\r\n                    <Alert>2</Alert>\r\n                </ChatTitle>\r\n                <ChatContent>\r\n                    <ul>\r\n                        <ChatMessage>\r\n                            <ChatMessageContent>안녕!</ChatMessageContent>\r\n                            <ChatMessageTime>13:11</ChatMessageTime>\r\n                        </ChatMessage>\r\n                        <ChatMessage>\r\n                            <ChatMessageContent>시간 있어?</ChatMessageContent>\r\n                            <ChatMessageTime>13:11</ChatMessageTime>\r\n                        </ChatMessage>\r\n                    \r\n                        {messageList.map(text => {\r\n                            return (\r\n                                <li>\r\n                                     <ChatMessage2>\r\n                                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                                            <ChatMessageContent>{text}</ChatMessageContent>\r\n                                            <ChatMessageTime style={{display:'flex', justifyContent:'flex-end'}}>{time((date.getHours() + 24) % 12 || 12)}:{time(date.getMinutes())}</ChatMessageTime>\r\n                                        </div>\r\n                                    </ChatMessage2>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </ChatContent>\r\n                <ChatBottom>\r\n                    <ChatInput \r\n                        onChange={onChange} value={text}\r\n                        onKeyPress={e=>{if(e.key==='Enter') onReset();}}\r\n                        placeholder=\"메세지를 입력하세요...\" />\r\n                    <FaPaperPlane onClick={onReset} size={20}/>\r\n                    </ChatBottom>\r\n            </ChatScreen>\r\n        </ChatBody>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport \"../css/Calendar/Calendar.css\";\r\nimport { format, startOfWeek, endOfWeek, startOfMonth, endOfMonth,\r\n    addDays, addMonths, subMonths, parse, isSameDay, isSameMonth } from 'date-fns'\r\n\r\nclass Calendar extends React.Component {\r\n  state = {\r\n    currentMonth: new Date(),\r\n    selectedDate: new Date()\r\n  };\r\n\r\n  renderHeader() {\r\n    const dateFormat = \"MMMM yyyy\";\r\n\r\n    return (\r\n      <div className=\"header row flex-middle\">\r\n        <div className=\"col col-start\">\r\n          <div className=\"icon\" onClick={this.prevMonth}>\r\n            chevron_left\r\n          </div>\r\n        </div>\r\n        <div className=\"col col-center\">\r\n          <span>{format(this.state.currentMonth, dateFormat)}</span>\r\n        </div>\r\n        <div className=\"col col-end\" onClick={this.nextMonth}>\r\n          <div className=\"icon\">chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDays() {\r\n    const dateFormat = \"dddd\";\r\n    const days = [];\r\n\r\n    let startDate = startOfWeek(this.state.currentMonth);\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n          {format(addDays(startDate, i), dateFormat)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"days row\">{days}</div>;\r\n  }\r\n\r\n  renderCells() {\r\n    const { currentMonth, selectedDate } = this.state;\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart);\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        const cloneDay = day;\r\n        days.push(\r\n          <div\r\n            className={`col cell ${\r\n              !isSameMonth(day, monthStart)\r\n                ? \"disabled\"\r\n                : isSameDay(day, selectedDate)\r\n                ? \"selected\"\r\n                : \"\"\r\n            }`}\r\n            key={day}\r\n            onClick={() => this.onDateClick(parse(cloneDay))}\r\n          >\r\n            <span className=\"number\">{formattedDate}</span>\r\n            <span className=\"bg\">{formattedDate}</span>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n  }\r\n\r\n  onDateClick = day => {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n  };\r\n\r\n  nextMonth = () => {\r\n    this.setState({\r\n      currentMonth: addMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth = () => {\r\n    this.setState({\r\n      currentMonth: subMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <body className=\"CalendarBody\">\r\n        <div className=\"CalendarContent\">\r\n          <header>\r\n            <div id=\"logo\">\r\n              <span className=\"icon\" />\r\n              <span>\r\n                <b>calendar</b>\r\n              </span>\r\n            </div>\r\n          </header>\r\n          <main>\r\n              <div className=\"calendar\">\r\n                  {this.renderHeader()}\r\n                  {this.renderDays()}\r\n                  {this.renderCells()}\r\n              </div>\r\n          </main>\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home.js\";\r\nimport ToDo from \"./routes/ToDo\";\r\nimport Chat from \"./routes/Chat\";\r\nimport Calendar from \"./routes/Calendar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/ToDo\" component={ToDo} />\r\n      <Route path=\"/Chat\" component={Chat} />\r\n      <Route path=\"/Calendar\" component={Calendar} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}