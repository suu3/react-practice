{"version":3,"sources":["routes/Home.js","routes/ToDo.js","routes/Chat.js","routes/Board/Data.js","routes/Board/PostList.js","routes/Board/PostDetail.js","routes/Board/PostAdd.js","routes/Board.js","App.js","index.js"],"names":["Home","state","className","to","React","Component","Checkbox","styled","button","props","isDone","css","XButton","ToDoText","p","isImportant","ToDo","day","Date","newItem","list","totalNum","item","this","find","element","setState","key","value","id","Math","random","slice","push","updatedList","filter","addItem","getMonth","getDate","getDay","map","onClick","importantActive","style","marginLeft","marginRight","color","checkActive","console","log","deleteItem","preventEmpty","onKeyPress","e","type","placeholder","onChange","updateInput","target","ChatBody","body","ChatScreen","div","ChatTitle","ChatBottom","ChatInput","input","ChatContent","ChatMessage","ChatMessageContent","ChatMessageTime","ChatMessage2","Alert","AlertText","date","time","num","messageList","Chat","useState","text","setText","onReset","fontSize","marginTop","display","flexDirection","justifyContent","getHours","getMinutes","size","postList","PostList","dataList","setDataList","useEffect","localStorage","getItem","JSON","parse","no","title","createDate","readCount","PostDetail","history","match","location","data","setData","params","setPostList","useRef","current","array","x","length","ReactHtmlParser","content","goBack","newData","setItem","stringify","onDeletePost","PostAdd","setTitle","setContent","onAddPost","toISOString","split","floor","alert","editor","ClassicEditor","onReady","event","getData","onBlur","onFocus","Board","path","exact","component","App","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af82a24c.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../css/Home.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='home-body'>\r\n            <section className=\"home-border\">\r\n                <div className=\"introduce\">\r\n                    <h1>Content</h1>\r\n                </div>\r\n                <div className=\"linkList\">\r\n                    <ul>\r\n                        <li className = \"menu\">\r\n                            <Link to=\"/ToDo\">✅ ToDo</Link>\r\n                        </li>\r\n                        <li className = \"menu\">\r\n                            <Link to=\"/Chat\">✅ Chat</Link>\r\n                        </li>\r\n                        <li className = \"menu\">\r\n                            <Link to=\"/Search\">❓ Search</Link>\r\n                        </li>                           \r\n                        <li className = \"menu\">\r\n                            <Link to=\"/Board/postList\">📄 Board</Link>\r\n                        </li>   \r\n                    </ul>\r\n                </div>\r\n            </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"../css/ToDo/ToDo.css\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { AiOutlineCheck, AiFillStar, AiOutlineStar } from \"react-icons/ai\";\r\n\r\nconst Checkbox = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 25px;\r\n  border: 3px solid rgba(1,1,1,0.8);\r\n  background-color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  color: rgb(48, 79, 255);\r\n  align-items: center;\r\n  padding: 0;\r\n  justify-content: center;\r\n  ${props =>\r\n    props.isDone &&\r\n    css`\r\n      background-color: rgb(255, 159, 188);\r\n    `}\r\n\r\n  @media screen and (max-width:767px){ \r\n    transform: translateX(-20%);\r\n\r\n    }\r\n\r\n`;\r\n\r\nconst XButton = styled.button`\r\n    border-radius: 25px;\r\n    border: none;\r\n    height: 30px;\r\n    font-size: large;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    width: 30px;\r\n    margin-left: 80px;\r\n    background-color: rgb(255, 75, 105);\r\n    ${props =>\r\n        props.isDone &&\r\n        css`\r\n          background-color: rgb(255, 75, 105, 0.2);\r\n    `}\r\n`;\r\n\r\nconst ToDoText = styled.p`\r\n    margin: 0;\r\n    padding: 0;\r\n    ${props =>\r\n    props.isImportant &&\r\n    css`\r\n        color: red;\r\n        font-weight: 900;\r\n    `}\r\n    ${props =>\r\n    props.isDone &&\r\n        css`\r\n          color: rgba(1,1,1,0.2);\r\n    `}\r\n    ${props =>\r\n    props.isImportant && props.isDone &&\r\n        css`\r\n            color: red;\r\n            opacity: 0.2;\r\n            font-weight: 900;\r\n    `}\r\n`;\r\n\r\nclass ToDo extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            day: new Date(),\r\n            newItem: \"\",\r\n            list: [],\r\n            totalNum : 0\r\n        };\r\n    };\r\n    checkActive(item){\r\n        const list = [...this.state.list];\r\n        const newItem = list.find(element => element===item);\r\n        if(newItem.isDone===true)\r\n            this.setState({totalNum : this.state.totalNum + 1});\r\n        else if(newItem.isDone===false)\r\n            this.setState({totalNum : this.state.totalNum - 1});\r\n\r\n        newItem.isDone = !newItem.isDone;\r\n        this.setState({\r\n            list\r\n        });\r\n    };\r\n    importantActive(item){\r\n        const list = [...this.state.list];\r\n        const newItem = list.find(element => element===item);\r\n        newItem.isImportant = !newItem.isImportant;\r\n        this.setState({\r\n            list\r\n        });\r\n    };\r\n    updateInput(key,value) {\r\n        this.setState({[key]:value });\r\n    };\r\n    addItem() {\r\n        const newItem = {\r\n          id: 1 + Math.random(),\r\n          value: this.state.newItem.slice(),\r\n          isDone: false,\r\n          isImportant: false\r\n        };\r\n    \r\n        const list = [...this.state.list];\r\n        list.push(newItem);\r\n    \r\n        this.setState({\r\n          list,\r\n          newItem:'',\r\n          totalNum: this.state.totalNum + 1\r\n        });\r\n    };\r\n    deleteItem(id) {\r\n        const list = [...this.state.list];\r\n        const updatedList = list.filter(item => item.id !== id);\r\n        this.setState({\r\n            list: updatedList,\r\n            totalNum: this.state.totalNum - 1\r\n        });\r\n    };\r\n    preventEmpty(){\r\n        if(this.state.newItem===\"\")\r\n            return;\r\n        this.addItem();\r\n    }\r\n    render(){\r\n        const date = ['일', '월', '화', '수', '목', '금', '토'];\r\n        return (\r\n            <div className=\"todo-body\">\r\n                <div className=\"todo-border\">\r\n                    <div className=\"date\">\r\n                        <div>{this.state.day.getMonth()+1}월 {this.state.day.getDate()}일 {date[this.state.day.getDay()]}요일</div>\r\n                        <div>🔷 오늘의 할 일 {this.state.totalNum}개 🔷</div>\r\n                </div>\r\n                <div className=\"todoList\">\r\n                    <ul>\r\n                            {this.state.list.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <div className=\"todo\">\r\n                                        <div className=\"important_check\">\r\n                                        {!item.isImportant && <AiOutlineStar onClick={ () => this.importantActive(item)} style={{marginLeft:10, marginRight: 7}} color=\"orange\" />}\r\n                                        {item.isImportant && <AiFillStar onClick={ () => this.importantActive(item)} style={{marginLeft:10, marginRight: 7}} color=\"orange\" />}\r\n                                        <Checkbox isDone={item.isDone} onClick={ () => this.checkActive(item)}>{console.log(\"isDone?\" + item.isDone)}{item.isDone && <AiOutlineCheck />}</Checkbox>\r\n                                        </div>\r\n                                        <ToDoText isDone={item.isDone} isImportant={item.isImportant}>{item.value}</ToDoText>\r\n                                        <XButton isDone={item.isDone} onClick={() => this.deleteItem(item.id)}>X</XButton>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                            })}\r\n                        </ul>\r\n                </div>\r\n                <div className=\"plusBox\">\r\n                        <button className=\"plusBox_button\" onClick={() => this.preventEmpty()}>+</button>\r\n                        <input className=\"plusBox_text\"\r\n                        onKeyPress={(e) => {if(e.key===\"Enter\") this.preventEmpty();}}\r\n                        type=\"text\" placeholder=\"할 일을 입력하세요. \"\r\n                        value={this.state.newItem}\r\n                        onChange={e => this.updateInput('newItem', e.target.value)}\r\n                        />\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDo;","import React, { useState } from 'react';\r\nimport \"../css/Chat/Chat.css\";\r\nimport styled from \"styled-components\";\r\nimport { IoPersonCircleSharp } from \"react-icons/io5\";\r\nimport { FaPaperPlane } from \"react-icons/fa\";\r\nimport 'react-chat-widget/lib/styles.css';\r\n\r\nconst ChatBody = styled.body`\r\n    width 100vw;\r\n    height: 100vh;\r\n    background: linear-gradient(to bottom, #e96443, #904e95);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ChatScreen = styled.div`\r\n    background-color: white;\r\n    border-radius: 25px;\r\n    margin: 50px 50px;\r\n    width: 50vw;\r\n    height: 70vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;    \r\n    box-shadow:  5px 5px 5px rgba(1, 1, 1, 0.5);\r\n    @media screen and (max-width:767px){ \r\n        width: 100%;\r\n        margin: 20px;\r\n    }\r\n`;\r\n\r\nconst ChatTitle = styled.div`\r\n    background-color: #FFC371;\r\n    height: 15%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: x-large;\r\n    font-weight: 900;\r\n    border-top-left-radius: 25px;\r\n    border-top-right-radius: 25px;\r\n`;\r\n\r\nconst ChatBottom = styled.div`\r\n    height: 12%;\r\n    border-bottom-left-radius: 25px;\r\n    border-bottom-right-radius: 25px;    \r\n    background-color: rgba(244, 247, 249);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 30px;\r\n`;\r\n\r\n\r\nconst ChatInput = styled.input`\r\n    font-family: \"Cafe24SsurroundAir\";\r\n    font-size: 18px;\r\n    border: none;\r\n    background-color: rgba(244, 247, 249);\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst ChatContent = styled.div`\r\n    overflow: auto;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    font-family: \"Cafe24SsurroundAir\";\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n    margin: 0px 12px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ChatMessageContent = styled.div`\r\n    background-color: rgba(244, 247, 249);\r\n    padding: 15px 15px;\r\n    margin-left: 4px;\r\n    width: 22vw;\r\n    border-radius: 25px;\r\n`;\r\n\r\nconst ChatMessageTime = styled.div`\r\n    font-size: x-small;\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst ChatMessage2 = styled.div`\r\n    margin: 0px 12px;\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n`;\r\n\r\nconst Alert = styled.div`\r\n    width:22px;\r\n    height:22px;\r\n    background-color: red;\r\n    border-radius:25px;\r\n    color: white;\r\n    font-size:small;\r\n    text-align: center;\r\n    margin-left: 8px;\r\n`;\r\n\r\nconst AlertText = styled.div`\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst date = new Date();\r\n\r\nfunction time (num) {\r\n    if (num < 10)\r\n        return (\r\n            '0' + num\r\n        );\r\n    else return num;\r\n}\r\n\r\nconst messageList = [];\r\nfunction Chat (){\r\n    const [text, setText] = useState('');\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    const onReset = () => {\r\n        setText('');\r\n        messageList.push(text);\r\n    } \r\n    return(\r\n        <ChatBody>\r\n            <ChatScreen>\r\n                <ChatTitle>\r\n                    <IoPersonCircleSharp style={{fontSize: 'xx-large', marginRight: 10, marginTop: 3}} />Someone\r\n                    <Alert><AlertText>2</AlertText></Alert>\r\n                </ChatTitle>\r\n                <ChatContent>\r\n                    <ul>\r\n                        <ChatMessage>\r\n                            <ChatMessageContent>안녕!</ChatMessageContent>\r\n                            <ChatMessageTime>13:11</ChatMessageTime>\r\n                        </ChatMessage>\r\n                        <ChatMessage>\r\n                            <ChatMessageContent>시간 있어?</ChatMessageContent>\r\n                            <ChatMessageTime>13:11</ChatMessageTime>\r\n                        </ChatMessage>\r\n                    \r\n                        {messageList.map(text => {\r\n                            return (\r\n                                <li>\r\n                                     <ChatMessage2>\r\n                                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                                            <ChatMessageContent>{text}</ChatMessageContent>\r\n                                            <ChatMessageTime style={{display:'flex', justifyContent:'flex-end'}}>{time((date.getHours() + 24) % 12 || 12)}:{time(date.getMinutes())}</ChatMessageTime>\r\n                                        </div>\r\n                                    </ChatMessage2>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </ChatContent>\r\n                <ChatBottom>\r\n                    <ChatInput \r\n                        onChange={onChange} value={text}\r\n                        onKeyPress={e=>{if(e.key==='Enter') onReset();}}\r\n                        placeholder=\"메세지를 입력하세요...\" />\r\n                    <FaPaperPlane onClick={onReset} size={20}/>\r\n                    </ChatBottom>\r\n            </ChatScreen>\r\n        </ChatBody>\r\n    );\r\n}\r\n\r\nexport default Chat;","const postList = [\r\n    {\r\n      \"no\": 1,\r\n      \"title\": \"첫번째 게시글입니다.\",\r\n      \"content\": \"첫번째 게시글 내용입니다.\",\r\n      \"createDate\": \"2022-02-26\",\r\n      \"readCount\": 6\r\n    },\r\n    {\r\n      \"no\": 2,\r\n      \"title\": \"두번째 게시글입니다.\",\r\n      \"content\": \"두번째 게시글 내용입니다.\",\r\n      \"createDate\": \"2022-02-26\",\r\n      \"readCount\": 5\r\n    },\r\n    {\r\n      \"no\": 3,\r\n      \"title\": \"세번째 게시글입니다.\",\r\n      \"content\": \"세번째 게시글 내용입니다.\",\r\n      \"createDate\": \"2022-02-26\",\r\n      \"readCount\": 1\r\n    }\r\n];\r\n  \r\nexport {\r\n  postList\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { postList } from './Data';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../../css/Board/PostList.css\";\r\n\r\nconst PostList = (props) => {\r\n    const [ dataList, setDataList ] = useState();\r\n    \r\n    useEffect(()=>{\r\n      if(localStorage.getItem('data')){\r\n        setDataList(JSON.parse(localStorage.getItem('data')));\r\n      }else{\r\n        setDataList(postList);\r\n      }\r\n    }, [ ])\r\n  \r\n    return (\r\n      <section className=\"post-section\">\r\n        <div>게시판</div>\r\n        <table className=\"table\">\r\n            <thead>\r\n            <tr className=\"table-head\">\r\n                <th>글번호</th>\r\n                <th>제목</th>\r\n                <th>등록일</th>\r\n                <th>조회수</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody className=\"table-body\">\r\n                {\r\n                    dataList ? dataList.map((item) => {\r\n                    return (\r\n                        <tr key={item.no}>\r\n                            <td>{ item.no }</td>\r\n                            <td> <Link to={`/Board/postDetail/${item.no}`}>{ item.title }</Link></td>\r\n                            <td>{ item.createDate }</td>\r\n                            <td>{ item.readCount }</td>\r\n                        </tr>\r\n                    )\r\n                    }) : \r\n                    <tr>\r\n                      <td></td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        <button className=\"post-add-btn\"><Link to={'/Board/postAdd'}>게시글 추가</Link></button>\r\n      </section>\r\n    )\r\n  }\r\n  \r\n  export default PostList;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { postList } from './Data';\r\nimport \"../../css/Board/PostDetail.css\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst PostDetail = ({ history, location, match }) => {\r\n  const [ data, setData ] = useState({});\r\n  const { no } = match.params;\r\n  const setPostList = useRef(postList);\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('data')){\r\n      setPostList.current = JSON.parse(localStorage.getItem('data'));\r\n    }\r\n\r\n    // eslint-disable-next-line eqeqeq\r\n    const array = setPostList.current.filter(x => x.no == no);\r\n    if (array.length === 1) {\r\n      setData(array[0]);\r\n    }\r\n  }, [ no ]);\r\n\r\n  const onDeletePost = () =>{\r\n    const newData = setPostList.current.filter(item => item.no != no);\r\n    console.log(newData);\r\n    localStorage.setItem(\"data\", JSON.stringify(newData));\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <section className=\"detail-section\">\r\n      <div>게시글 상세정보</div>\r\n\r\n      <div className=\"detail-container\">\r\n        {\r\n          data ? (\r\n            <>\r\n              <div className=\"detail-row\">\r\n                <label>게시글 번호</label>\r\n                <div>{ data.no }</div>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <label>제목</label>\r\n                <div>{ data.title }</div>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <label>작성일</label>\r\n                <div>{ data.createDate }</div>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <label>조회수</label>\r\n                <div>{ data.readCount }</div>\r\n              </div>\r\n              <div className=\"detail-row\">\r\n                <label>내용</label>\r\n                <div>\r\n                  { ReactHtmlParser(data.content) }\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : '해당 게시글을 찾을 수 없습니다.'\r\n        }\r\n        <button className=\"detail-list-btn\" onClick={() => history.goBack()}>목록으로 돌아가기</button>\r\n        <button className=\"post-delete-btn\" onClick={() => onDeletePost()}>삭제</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostDetail;","import React, { useState, useEffect } from 'react';\r\nimport \"../../css/Board/PostAdd.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport { postList } from './Data';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst PostAdd = () => {\r\n    const [ data, setData ] = useState();\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('data')){\r\n          setData(JSON.parse(localStorage.getItem('data')));\r\n        }else{\r\n          setData(postList);\r\n        }\r\n    }, [ ])\r\n    const [ title, setTitle ] = useState(\"\");\r\n    const [ content, setContent ] = useState(\"<p>Hello from CKEditor 5!</p>\");\r\n    const onAddPost = () => {\r\n        if(title===\"\" || content ===\"\"){\r\n            alert(\"폼을 마저 채워주세요.\");\r\n            return;\r\n        }\r\n        const date = new Date(+new Date() + 3240 * 10000).toISOString().split(\"T\")[0]\r\n        const newData = {\r\n            \"no\": data.length+1,\r\n            \"title\": title,\r\n            \"content\": content,\r\n            \"createDate\": date,\r\n            \"readCount\": Math.floor(Math.random() * 10)\r\n        };\r\n        setData([...data, newData]);\r\n        localStorage.setItem(\"data\", JSON.stringify([...data, newData]));\r\n    }\r\n    return(\r\n        <section className=\"post-add-section\"> \r\n            <h2>게시글 쓰기</h2>\r\n            <div className='editor-container'>\r\n                <input onChange={(e) => {setTitle(e.target.value);}} className=\"title-input\" type='text' placeholder='제목'/>\r\n                <CKEditor\r\n                editor={ClassicEditor}\r\n                data=\"<p>Hello from CKEditor 5!</p>\"\r\n                onReady={editor => {\r\n                    // You can store the \"editor\" and use when it is needed.\r\n                    //console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                    const content = editor.getData();\r\n                    //console.log({ event, editor, content });\r\n                    setContent(content);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                    //console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                    //console.log('Focus.', editor);\r\n                }}\r\n            />\r\n            </div>\r\n            {title === \"\" || content===\"\" ?\r\n            <button onClick={onAddPost} className=\"add-submit-button\">입력</button>\r\n            : <Link to={'/Board/postList'}><button className=\"add-submit-button\" onClick={onAddPost}>\r\n            입력</button></Link>}\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default PostAdd;","import { Route } from 'react-router-dom';\r\nimport PostList from './Board/PostList';\r\nimport PostDetail from './Board/PostDetail';\r\nimport PostAdd from './Board/PostAdd';\r\n\r\nfunction Board() {\r\n  return (\r\n      <>\r\n        <Route path='/Board/postDetail/:no' exact component={PostDetail} />\r\n        <Route path='/Board/postList' exact component={PostList} />\r\n        <Route path='/Board/postAdd' exact component={PostAdd} />\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home.js\";\r\nimport ToDo from \"./routes/ToDo\";\r\nimport Chat from \"./routes/Chat\";\r\nimport Search from \"./routes/Search\";\r\nimport Board from \"./routes/Board\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/ToDo\" component={ToDo} />\r\n      <Route path=\"/Chat\" component={Chat} />\r\n      <Route path=\"/Search\" component={Search} />\r\n      <Route path=\"/Board\" component={Board} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}